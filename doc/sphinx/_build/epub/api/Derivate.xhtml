<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Derivate package</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="stylesheet" type="text/css" href="../_static/graphviz.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="derivate-package">
<h1>Derivate package</h1>
<div class="section" id="module-Derivate.session1_exercise3">
<span id="submodules"></span><h2>Submodules</h2>
<dl class="py class">
<dt class="sig sig-object py" id="Derivate.session1_exercise3.BondCashFlowLegList">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">Derivate.session1_exercise3.</span></span><span class="sig-name descname"><span class="pre">BondCashFlowLegList</span></span></dt>
<dd><p>Bases: <code class="xref py py-class docutils literal notranslate"><span class="pre">dcf.cashflow.CashFlowLegList</span></code></p>
<p>Simple fixed rate bond</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>payment_date_list</strong> – list of payment dates,
last date in list sets the bond maturity</p></li>
<li><p><strong>notional_amount</strong> – bond notional amount</p></li>
<li><p><strong>fixed_rate</strong> – fixed interest rate</p></li>
<li><p><strong>forward_curve</strong> – InterestRateCurve</p></li>
<li><p><strong>day_count</strong> – day count convention function
to calculate year fractions between two dates</p></li>
<li><p><strong>start_date</strong> – issue date of the bond</p></li>
</ul>
</dd>
</dl>
<dl class="py method">
<dt class="sig sig-object py" id="Derivate.session1_exercise3.BondCashFlowLegList.__init__">
<span class="sig-name descname"><span class="pre">__init__</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">payment_date_list</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">notional_amount</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">1.0</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">fixed_rate</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0.0</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">forward_curve</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">day_count</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">start_date</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Simple fixed rate bond</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>payment_date_list</strong> – list of payment dates,
last date in list sets the bond maturity</p></li>
<li><p><strong>notional_amount</strong> – bond notional amount</p></li>
<li><p><strong>fixed_rate</strong> – fixed interest rate</p></li>
<li><p><strong>forward_curve</strong> – InterestRateCurve</p></li>
<li><p><strong>day_count</strong> – day count convention function
to calculate year fractions between two dates</p></li>
<li><p><strong>start_date</strong> – issue date of the bond</p></li>
</ul>
</dd>
</dl>
</dd></dl>

</dd></dl>

<span class="target" id="module-Derivate.session2_exercise1"></span><dl class="py function">
<dt class="sig sig-object py" id="Derivate.session2_exercise1.get_basis_point_value">
<span class="sig-prename descclassname"><span class="pre">Derivate.session2_exercise1.</span></span><span class="sig-name descname"><span class="pre">get_basis_point_value</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">cashflow_list</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">discount_curve</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">valuation_date</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">delta_curve</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="o"><span class="pre">**</span></span><span class="n"><span class="pre">kwargs</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>value of one basis point change in interest rates</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>cashflow_list</strong> – cashflow product for valuation</p></li>
<li><p><strong>discount_curve</strong> – discount curve for valuation</p></li>
<li><p><strong>valuation_date</strong> – date of valuation</p></li>
<li><p><strong>delta_curve</strong> – interest rate curve to change interest rates</p></li>
<li><p><strong>kwargs</strong> – additional argument for <em>get_present_value</em> function</p></li>
</ul>
</dd>
<dt class="field-even">Returns</dt>
<dd class="field-even"><p></p>
</dd>
</dl>
</dd></dl>

<span class="target" id="module-Derivate.session2_exercise4"></span><dl class="py function">
<dt class="sig sig-object py" id="Derivate.session2_exercise4.get_bucketed_delta">
<span class="sig-prename descclassname"><span class="pre">Derivate.session2_exercise4.</span></span><span class="sig-name descname"><span class="pre">get_bucketed_delta</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">cashflow_list</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">discount_curve</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">valuation_date</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">delta_curve</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">delta_grid</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">shift</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0.0001</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>list of bpv delta for partly shifted interest rate curve</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>cashflow_list</strong> – list of cashflows</p></li>
<li><p><strong>discount_curve</strong> – discount factors are obtained from this curve</p></li>
<li><p><strong>valuation_date</strong> – date to discount to</p></li>
<li><p><strong>delta_curve</strong> – curve which will be shifted</p></li>
<li><p><strong>delta_grid</strong> – grid dates to build partly shifts</p></li>
<li><p><strong>shift</strong> – shift size to derive bpv</p></li>
</ul>
</dd>
<dt class="field-even">Returns</dt>
<dd class="field-even"><p><cite>list(float)</cite> - basis point value for each <strong>delta_grid</strong> point</p>
</dd>
</dl>
<p>Let <span class="math notranslate nohighlight">\(v(t, r)\)</span> be the present value of the given <strong>cashflow_list</strong>
depending on interest rate curve <span class="math notranslate nohighlight">\(r\)</span>
which can be used as forward curve to estimate float rates
or as zero rate curve to derive discount factors (or both).</p>
<p>Then, with <strong>shift_size</strong> <span class="math notranslate nohighlight">\(s\)</span> and shifting <span class="math notranslate nohighlight">\(s_j\)</span>,</p>
<p><div class="math notranslate nohighlight">
\[\Delta_j(t) = 0.0001 \cdot \frac{v(t, r + s_j) - v(t, r)}{s}\]</div>
</p>
<p>and the full bucketed delta vector is
<span class="math notranslate nohighlight">\(\big(\Delta_1(t), \Delta_2(t), \dots, \Delta_{m-1}(t) \Delta_m(t)\big)\)</span>.</p>
<p>Overall the shifting <span class="math notranslate nohighlight">\(s_1, \dots s_n\)</span> is a partition of the unity,
i.e. <span class="math notranslate nohighlight">\(\sum_{j=1}^m s_j = s\)</span>.</p>
<p>Each <span class="math notranslate nohighlight">\(s_j\)</span> for <span class="math notranslate nohighlight">\(i=2, \dots, m-1\)</span> is a function of the form of an triangle,
i.e. for a <strong>delta_grid</strong> <span class="math notranslate nohighlight">\(t_1, \dots, t_m\)</span></p>
<div class="math notranslate nohighlight">
\[
s_j(t) =
\left\{
\begin{array}{cl}
    0 &amp; \text{ for } t &lt; t_{j-1} \\
    s \cdot \frac{t-t_{j-1}}{t_j-t_{j-1}}
        &amp; \text{ for } t_{j-1} \leq t &lt; t_j \\
    s \cdot \frac{t_{j+1}-t}{t_{j+1}-t_j}
        &amp; \text{ for } t_j \leq t &lt; t_{j+1} \\
    0 &amp; \text{ for } t_{j+1} \leq t \\
\end{array}
\right.
\]</div><p>while</p>
<div class="math notranslate nohighlight">
\[
s_1(t) =
\left\{
\begin{array}{cl}
    s &amp; \text{ for } t &lt; t_1 \\
    s \cdot \frac{t_2-t}{t_2-t_1} &amp; \text{ for } t_1 \leq t &lt; t_2 \\
    0 &amp; \text{ for } t_2 \leq t \\
\end{array}
\right.
\]</div><p>and</p>
<div class="math notranslate nohighlight">
\[
s_m(t) =
\left\{
\begin{array}{cl}
    0 &amp; \text{ for } t &lt; t_{m-1} \\
    s \cdot \frac{t-t_{m-1}}{t_m-t_{m-1}}
        &amp; \text{ for } t_{m-1} \leq t &lt; t_m \\
    s &amp; \text{ for } t_m \leq t \\
\end{array}
\right.
\]</div></dd></dl>

<span class="target" id="module-Derivate.session3_exercise1"></span><span class="target" id="module-Derivate.session3_exercise2"></span><span class="target" id="module-Derivate.session3_exercise3"></span><dl class="py function">
<dt class="sig sig-object py" id="Derivate.session3_exercise3.get_bucketed_delta">
<span class="sig-prename descclassname"><span class="pre">Derivate.session3_exercise3.</span></span><span class="sig-name descname"><span class="pre">get_bucketed_delta</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">cashflow_list</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">discount_curve</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">valuation_date</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">delta_curve</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">delta_grid</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">shift</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0.0001</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>list of bpv delta for partly shifted interest rate curve</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>cashflow_list</strong> – list of cashflows</p></li>
<li><p><strong>discount_curve</strong> – discount factors are obtained from this curve</p></li>
<li><p><strong>valuation_date</strong> – date to discount to</p></li>
<li><p><strong>delta_curve</strong> – curve which will be shifted</p></li>
<li><p><strong>delta_grid</strong> – grid dates to build partly shifts</p></li>
<li><p><strong>shift</strong> – shift size to derive bpv</p></li>
</ul>
</dd>
<dt class="field-even">Returns</dt>
<dd class="field-even"><p><cite>list(float)</cite> - basis point value for each <strong>delta_grid</strong> point</p>
</dd>
</dl>
<p>Let <span class="math notranslate nohighlight">\(v(t, r)\)</span> be the present value of the given <strong>cashflow_list</strong>
depending on interest rate curve <span class="math notranslate nohighlight">\(r\)</span>
which can be used as forward curve to estimate float rates
or as zero rate curve to derive discount factors (or both).</p>
<p>Then, with <strong>shift_size</strong> <span class="math notranslate nohighlight">\(s\)</span> and shifting <span class="math notranslate nohighlight">\(s_j\)</span>,</p>
<p><div class="math notranslate nohighlight">
\[\Delta_j(t) = 0.0001 \cdot \frac{v(t, r + s_j) - v(t, r)}{s}\]</div>
</p>
<p>and the full bucketed delta vector is
<span class="math notranslate nohighlight">\(\big(\Delta_1(t), \Delta_2(t), \dots, \Delta_{m-1}(t) \Delta_m(t)\big)\)</span>.</p>
<p>Overall the shifting <span class="math notranslate nohighlight">\(s_1, \dots s_n\)</span> is a partition of the unity,
i.e. <span class="math notranslate nohighlight">\(\sum_{j=1}^m s_j = s\)</span>.</p>
<p>Each <span class="math notranslate nohighlight">\(s_j\)</span> for <span class="math notranslate nohighlight">\(i=2, \dots, m-1\)</span> is a function of the form of an triangle,
i.e. for a <strong>delta_grid</strong> <span class="math notranslate nohighlight">\(t_1, \dots, t_m\)</span></p>
<div class="math notranslate nohighlight">
\[
s_j(t) =
\left\{
\begin{array}{cl}
    0 &amp; \text{ for } t &lt; t_{j-1} \\
    s \cdot \frac{t-t_{j-1}}{t_j-t_{j-1}}
        &amp; \text{ for } t_{j-1} \leq t &lt; t_j \\
    s \cdot \frac{t_{j+1}-t}{t_{j+1}-t_j}
        &amp; \text{ for } t_j \leq t &lt; t_{j+1} \\
    0 &amp; \text{ for } t_{j+1} \leq t \\
\end{array}
\right.
\]</div><p>while</p>
<div class="math notranslate nohighlight">
\[
s_1(t) =
\left\{
\begin{array}{cl}
    s &amp; \text{ for } t &lt; t_1 \\
    s \cdot \frac{t_2-t}{t_2-t_1} &amp; \text{ for } t_1 \leq t &lt; t_2 \\
    0 &amp; \text{ for } t_2 \leq t \\
\end{array}
\right.
\]</div><p>and</p>
<div class="math notranslate nohighlight">
\[
s_m(t) =
\left\{
\begin{array}{cl}
    0 &amp; \text{ for } t &lt; t_{m-1} \\
    s \cdot \frac{t-t_{m-1}}{t_m-t_{m-1}}
        &amp; \text{ for } t_{m-1} \leq t &lt; t_m \\
    s &amp; \text{ for } t_m \leq t \\
\end{array}
\right.
\]</div></dd></dl>

</div>
<div class="section" id="module-Derivate">
<span id="module-contents"></span><h2>Module contents</h2>
<p>Derivative Finanzinstrumente (created by auxilium)</p>
<dl class="py class">
<dt class="sig sig-object py" id="Derivate.BondCashFlowLegList">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">Derivate.</span></span><span class="sig-name descname"><span class="pre">BondCashFlowLegList</span></span></dt>
<dd><p>Bases: <code class="xref py py-class docutils literal notranslate"><span class="pre">dcf.cashflow.CashFlowLegList</span></code></p>
<p>Simple fixed rate bond</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>payment_date_list</strong> – list of payment dates,
last date in list sets the bond maturity</p></li>
<li><p><strong>notional_amount</strong> – bond notional amount</p></li>
<li><p><strong>fixed_rate</strong> – fixed interest rate</p></li>
<li><p><strong>forward_curve</strong> – InterestRateCurve</p></li>
<li><p><strong>day_count</strong> – day count convention function
to calculate year fractions between two dates</p></li>
<li><p><strong>start_date</strong> – issue date of the bond</p></li>
</ul>
</dd>
</dl>
<dl class="py method">
<dt class="sig sig-object py" id="Derivate.BondCashFlowLegList.__init__">
<span class="sig-name descname"><span class="pre">__init__</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">payment_date_list</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">notional_amount</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">1.0</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">fixed_rate</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0.0</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">forward_curve</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">day_count</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">start_date</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Simple fixed rate bond</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>payment_date_list</strong> – list of payment dates,
last date in list sets the bond maturity</p></li>
<li><p><strong>notional_amount</strong> – bond notional amount</p></li>
<li><p><strong>fixed_rate</strong> – fixed interest rate</p></li>
<li><p><strong>forward_curve</strong> – InterestRateCurve</p></li>
<li><p><strong>day_count</strong> – day count convention function
to calculate year fractions between two dates</p></li>
<li><p><strong>start_date</strong> – issue date of the bond</p></li>
</ul>
</dd>
</dl>
</dd></dl>

</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="Derivate.get_basis_point_value">
<span class="sig-prename descclassname"><span class="pre">Derivate.</span></span><span class="sig-name descname"><span class="pre">get_basis_point_value</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">cashflow_list</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">discount_curve</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">valuation_date</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">delta_curve</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="o"><span class="pre">**</span></span><span class="n"><span class="pre">kwargs</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>value of one basis point change in interest rates</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>cashflow_list</strong> – cashflow product for valuation</p></li>
<li><p><strong>discount_curve</strong> – discount curve for valuation</p></li>
<li><p><strong>valuation_date</strong> – date of valuation</p></li>
<li><p><strong>delta_curve</strong> – interest rate curve to change interest rates</p></li>
<li><p><strong>kwargs</strong> – additional argument for <em>get_present_value</em> function</p></li>
</ul>
</dd>
<dt class="field-even">Returns</dt>
<dd class="field-even"><p></p>
</dd>
</dl>
</dd></dl>

<dl class="py function">
<dt class="sig sig-object py" id="Derivate.get_bucketed_delta">
<span class="sig-prename descclassname"><span class="pre">Derivate.</span></span><span class="sig-name descname"><span class="pre">get_bucketed_delta</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">cashflow_list</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">discount_curve</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">valuation_date</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">delta_curve</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">delta_grid</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">shift</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0.0001</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>list of bpv delta for partly shifted interest rate curve</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>cashflow_list</strong> – list of cashflows</p></li>
<li><p><strong>discount_curve</strong> – discount factors are obtained from this curve</p></li>
<li><p><strong>valuation_date</strong> – date to discount to</p></li>
<li><p><strong>delta_curve</strong> – curve which will be shifted</p></li>
<li><p><strong>delta_grid</strong> – grid dates to build partly shifts</p></li>
<li><p><strong>shift</strong> – shift size to derive bpv</p></li>
</ul>
</dd>
<dt class="field-even">Returns</dt>
<dd class="field-even"><p><cite>list(float)</cite> - basis point value for each <strong>delta_grid</strong> point</p>
</dd>
</dl>
<p>Let <span class="math notranslate nohighlight">\(v(t, r)\)</span> be the present value of the given <strong>cashflow_list</strong>
depending on interest rate curve <span class="math notranslate nohighlight">\(r\)</span>
which can be used as forward curve to estimate float rates
or as zero rate curve to derive discount factors (or both).</p>
<p>Then, with <strong>shift_size</strong> <span class="math notranslate nohighlight">\(s\)</span> and shifting <span class="math notranslate nohighlight">\(s_j\)</span>,</p>
<p><div class="math notranslate nohighlight">
\[\Delta_j(t) = 0.0001 \cdot \frac{v(t, r + s_j) - v(t, r)}{s}\]</div>
</p>
<p>and the full bucketed delta vector is
<span class="math notranslate nohighlight">\(\big(\Delta_1(t), \Delta_2(t), \dots, \Delta_{m-1}(t) \Delta_m(t)\big)\)</span>.</p>
<p>Overall the shifting <span class="math notranslate nohighlight">\(s_1, \dots s_n\)</span> is a partition of the unity,
i.e. <span class="math notranslate nohighlight">\(\sum_{j=1}^m s_j = s\)</span>.</p>
<p>Each <span class="math notranslate nohighlight">\(s_j\)</span> for <span class="math notranslate nohighlight">\(i=2, \dots, m-1\)</span> is a function of the form of an triangle,
i.e. for a <strong>delta_grid</strong> <span class="math notranslate nohighlight">\(t_1, \dots, t_m\)</span></p>
<div class="math notranslate nohighlight">
\[
s_j(t) =
\left\{
\begin{array}{cl}
    0 &amp; \text{ for } t &lt; t_{j-1} \\
    s \cdot \frac{t-t_{j-1}}{t_j-t_{j-1}}
        &amp; \text{ for } t_{j-1} \leq t &lt; t_j \\
    s \cdot \frac{t_{j+1}-t}{t_{j+1}-t_j}
        &amp; \text{ for } t_j \leq t &lt; t_{j+1} \\
    0 &amp; \text{ for } t_{j+1} \leq t \\
\end{array}
\right.
\]</div><p>while</p>
<div class="math notranslate nohighlight">
\[
s_1(t) =
\left\{
\begin{array}{cl}
    s &amp; \text{ for } t &lt; t_1 \\
    s \cdot \frac{t_2-t}{t_2-t_1} &amp; \text{ for } t_1 \leq t &lt; t_2 \\
    0 &amp; \text{ for } t_2 \leq t \\
\end{array}
\right.
\]</div><p>and</p>
<div class="math notranslate nohighlight">
\[
s_m(t) =
\left\{
\begin{array}{cl}
    0 &amp; \text{ for } t &lt; t_{m-1} \\
    s \cdot \frac{t-t_{m-1}}{t_m-t_{m-1}}
        &amp; \text{ for } t_{m-1} \leq t &lt; t_m \\
    s &amp; \text{ for } t_m \leq t \\
\end{array}
\right.
\]</div></dd></dl>

<dl class="py class">
<dt class="sig sig-object py" id="Derivate.Line">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">Derivate.</span></span><span class="sig-name descname"><span class="pre">Line</span></span></dt>
<dd><p>Bases: <code class="xref py py-class docutils literal notranslate"><span class="pre">object</span></code></p>
<p>This a example class (by auxilium)</p>
<p>The <a class="reference internal" href="#Derivate.Line" title="Derivate.Line"><code class="xref py py-class docutils literal notranslate"><span class="pre">Derivate.Line</span></code></a> objects implements a straight line,
i.e. a function <span class="math notranslate nohighlight">\(y = f(x)\)</span> with</p>
<p>$$  f(x) = a + b \cdot x  $$</p>
<p>where <span class="math notranslate nohighlight">\(a\)</span> and <span class="math notranslate nohighlight">\(b\)</span> are numbers.</p>
<div class="doctest highlight-default notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="kn">from</span> <span class="nn">Derivate</span> <span class="kn">import</span> <span class="n">Line</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">line</span> <span class="o">=</span> <span class="n">Line</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">line</span><span class="o">.</span><span class="n">y</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="mi">3</span><span class="p">)</span>
<span class="go">7</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">line</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>  <span class="c1"># Line objects are callable</span>
<span class="go">7</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">line</span><span class="o">.</span><span class="n">a</span>
<span class="go">1</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">line</span><span class="o">.</span><span class="n">b</span>
<span class="go">2</span>
</pre></div>
</div>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>a</strong> – a value</p></li>
<li><p><strong>b</strong> – another value</p></li>
</ul>
</dd>
</dl>
<dl class="py method">
<dt class="sig sig-object py" id="Derivate.Line.__init__">
<span class="sig-name descname"><span class="pre">__init__</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">a</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">0</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">b</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">1</span></span></em><span class="sig-paren">)</span></dt>
<dd><dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>a</strong> – a value</p></li>
<li><p><strong>b</strong> – another value</p></li>
</ul>
</dd>
</dl>
</dd></dl>

<dl class="py property">
<dt class="sig sig-object py" id="Derivate.Line.a">
<em class="property"><span class="pre">property</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">a</span></span></dt>
<dd><p>a value</p>
</dd></dl>

<dl class="py property">
<dt class="sig sig-object py" id="Derivate.Line.b">
<em class="property"><span class="pre">property</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">b</span></span></dt>
<dd><p>b value</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="Derivate.Line.y">
<span class="sig-name descname"><span class="pre">y</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">x</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">1</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>gives y value depending on x value argument</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><p><strong>x</strong> – x value</p>
</dd>
<dt class="field-even">Returns</dt>
<dd class="field-even"><p><span class="math notranslate nohighlight">\(a + b * x\)</span></p>
</dd>
</dl>
</dd></dl>

</dd></dl>

</div>
</div>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>